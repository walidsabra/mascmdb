@model CMDB01.Models.account

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>Create</h2>


@using (Html.BeginForm("Create", "accounts", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "myform", role = "form" }))
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">
        <h4>account</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UltimateId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UltimateId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UltimateId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Status, new SelectList(ViewBag.AccountStatus, "Text", "Text"), "<<< Select >>>", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContractType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ContractType, new SelectList(ViewBag.AccountContractType, "Text", "Text"), "<<< Select >>>", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ContractType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opportunity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Opportunity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Opportunity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectorProject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProjectorProject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectorProject, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RequestIMS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RequestIMS, new SelectList(ViewBag.IMS, "Text", "Text"), "<<< Select >>>", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RequestIMS, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Billable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Billable, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Billable, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Account Contacts", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                <form class="form-inline">

                    @Html.DropDownList("contactId", (List<SelectListItem>)ViewBag.contacts, htmlAttributes: new { @class = "form-control", @onchange = "AddRecord()" })

                    @* <input type="button"  onclick="AddRecord()" name="add" value="Add" />*@
                </form>

                <table id="myTable" class="table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Contact Name</th>
                            <th>Category</th>
                        </tr>
                    </thead>
                    <tbody id="cntRows"></tbody>

                </table>
            </div>
            <input type="hidden" name="hdContactsArray" id="hdContactsArray" />
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>

    function AddRecord()
    {
        var selectedContactId = $('#contactId').val();
        var selectedContactName = $("#contactId option:selected").text();
        var radioNam = "radio" + selectedContactId;

                var ddl = "<select id='ddl'>";
        var list = @Html.Raw(Json.Encode(ViewBag.AccountEntityTypes));
        for (var i = 0; i < list.length; i++) {
            ddl = ddl + " <option value=\"" + list[i].Text + "\">" + list[i].Text + "</option>";
        }
        ddl = ddl + "</select>";

        $('#cntRows').append('<tr>' +
            "<td><label id='lblContactName'>" + selectedContactName + "</label><input type='hidden' id='hdnContactID' value=" + selectedContactId + "></td>" +
            "<td>" + ddl + "</td></tr>");
            //"<td><input type=\"radio\" name=\"" + radioNam + "\" id='allComms'>All Comms &nbsp;</input><input type=\"radio\" name=\"" + radioNam + "\"id='informOnly'>Inform Only</input></td></tr>");


    }

    $(document).ready(function () {

        $('#myform').submit(function () {
            var contacts = new Array();

            //get all of the values except the header
            $("#myTable tbody tr").each(function () {
                //debugger;
                var tds = $(this).find("td");
                var contactID = $(tds[0]).find('#hdnContactID').val();
                var all = $(tds[1]).find('#allComms').is(":checked");
                var inform = $(tds[1]).find('#informOnly').is(":checked");
                var opt = $(tds[1]).find('#ddl option:selected').text();

                var contact = { contactId: contactID, isAll: all, isInform: inform, opt: opt };
                contacts.push(contact);
            });

            //alert(JSON.stringify(contacts));
            $('#hdContactsArray').val(JSON.stringify(contacts));
        });
    });

    //$(function () {
    //    $("#contrDate").datepicker();
    //});
</script>
