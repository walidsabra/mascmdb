@model CMDB01.Models.account

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/Scripts/jquery-1.12.4.min.js"></script>
<script src="~/Scripts/jquery-1.12.4.js"></script>
<h2>Create</h2>


@using (Html.BeginForm("Create", "accounts", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "myform", role = "form" }))
{
    @Html.AntiForgeryToken()
    

    <div class="form-horizontal">
        @* IMS DDL Items *@
        @{
            List<SelectListItem> IMSlistItems = new List<SelectListItem>();
            IMSlistItems.Add(new SelectListItem
            {
                Text = "Yes",
                Value = "Yes"
            });
            IMSlistItems.Add(new SelectListItem
            {
                Text = "No",
                Value = "No"
            });
            IMSlistItems.Add(new SelectListItem
            {
                Text = "Completed",
                Value = "Completed"
            });
        }

        @* Sucess Level DDL Items *@
        @{
            List<SelectListItem> LevellistItems = new List<SelectListItem>();
            LevellistItems.Add(new SelectListItem
            {
                Text = "Level 1",
                Value = "Level 1"
            });
            LevellistItems.Add(new SelectListItem
            {
                Text = "Level 2",
                Value = "Level 2"
            });
            LevellistItems.Add(new SelectListItem
            {
                Text = "Level 3",
                Value = "Level 3"
            });
            LevellistItems.Add(new SelectListItem
            {
                Text = "Level 4",
                Value = "Level 4"
            });
        }
        <h4>account</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UltimateId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UltimateId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UltimateId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContractDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContractDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContractDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opportunity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Opportunity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Opportunity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectorProject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProjectorProject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectorProject, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LinktoC4S, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LinktoC4S, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LinktoC4S, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.SuccessAdminLevel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SuccessAdminLevel, LevellistItems, "<<< Select >>>",  new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.SuccessAdminLevel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequestIMS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RequestIMS, IMSlistItems, "<<< Select >>>",   new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.RequestIMS, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Billable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Billable, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Billable, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Account Contacts", htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.DropDownList("contactId", (List<SelectListItem>)ViewBag.contacts, "<<< Select >>>", htmlAttributes: new { @class = "form-control" })

                <input type="button" class="btn" onclick="AddRecord()" name="add" value="Add"/>

                <table id="myTable" class="table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Contact Name</th>
                            <th>Outage</th>
                            <th>Configuration</th>
                        </tr>
                    </thead>
                    <tbody id="cntRows">

                    </tbody>
                    
                </table>
            </div>
            <input type="hidden" name="hdContactsArray" id="hdContactsArray" />
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>

    function AddRecord()
    {
        var selectedContactId = $('#contactId').val();
        var selectedContactName = $("#contactId option:selected").text();

        $('#cntRows').append('<tr>' +
            "<td><label id='lblContactName'>" + selectedContactName + "</label><input type='hidden' id='hdnContactID' value=" + selectedContactId + "></td>" +
            "<td><input type=\"checkbox\" name=\"name1\" id='chkOutage' /></td>" +
            "<td><input type=\"checkbox\" name=\"name2\"id='chkConfiguration' /></td></tr>");

       
    }

    $(document).ready(function () {
      //  debugger;
        $('#myform').submit(function () {
          //  alert('sdsd');
            var contacts = new Array();

            //get all of the values except the header
            $("#myTable tbody tr").each(function () {
                //debugger;
                var tds = $(this).find("td");
                var contactID = $(tds[0]).find('#hdnContactID').val();
                var outage = $(tds[1]).find('#chkOutage').is(":checked");
                var Configuration = $(tds[2]).find('#chkConfiguration').is(":checked");

                var contact = { contactId: contactID, isOutage: outage, isConfiguration: Configuration };
                contacts.push(contact);
            });

            alert(JSON.stringify(contacts));
            $('#hdContactsArray').val(JSON.stringify(contacts));

            // DO STUFF...
            //  return false; // return false to cancel form action
        });

    });

</script>
