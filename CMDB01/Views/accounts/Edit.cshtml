@model CMDB01.Models.account

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "accounts", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "myform", role = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>account</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UltimateId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UltimateId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UltimateId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContractDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContractDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContractDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Opportunity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Opportunity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Opportunity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProjectorProject, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProjectorProject, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProjectorProject, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Account Contacts", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">


                <table id="myTable" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Contact Name</th>
                            <th>Comms</th>
                            <th style="width:8px"></th>
                        </tr>
                    </thead>
                    <tbody id="cntRows">
                        @if (Model.AccountContacts.Count > 0)
                        {
                            foreach (var cn in Model.AccountContacts)
                            {
                                <tr>
                                    <td><a title="Email" href="mailto:@cn.contact.email"> <i class="glyphicon glyphicon-envelope"></i></a> @cn.contact.Name</td>
                                    <td>
                                        @if (@cn.entityCategory == "All Comms")
                                        { <a style="text-decoration:none">All Comms</a> }
                                        @if (@cn.entityCategory == "Inform Only")
                                        { <a style="text-decoration:none">Inform Only</a> }
                                    </td>
                                    <td>
                                        <a style="color:red" rel="tooltip" title="Delete" href="@Url.Action("DeleteAccountContact", "accounts", new { accId = Model.Id,  contactId = cn.contact.Id })"><i class="glyphicon glyphicon-remove"></i></a>
                                    </td>
                                </tr>

                            }
                        }
                    </tbody>
                </table>


                <div class="col-md-10">
                    <form class="form-inline">
                        @Html.DropDownList("contactId", (List<SelectListItem>)ViewBag.contacts, htmlAttributes: new { @class = "form-control", @onchange = "AddRecord()" })
                    </form>
                </div>
                <input type="hidden" name="hdContactsArray" id="hdContactsArray" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>

    function AddRecord() {
        var selectedContactId = $('#contactId').val();
        var selectedContactName = $("#contactId option:selected").text();
        var radioNam = "radio" + selectedContactId;

        $('#cntRows').append('<tr>' +
            "<td><label id='lblContactName'>" + selectedContactName + "</label><input type='hidden' id='hdnContactID' value=" + selectedContactId + "></td>" +
            "<td><input type=\"radio\" name=\"" + radioNam + "\" id='allComms'>All Comms &nbsp;</input><input type=\"radio\" name=\"" + radioNam + "\"id='informOnly'>Inform Only</input></td><td></td></tr>");


    }

    $(document).ready(function () {
        $('#myform').submit(function () {
            var contacts = new Array();

            //get all of the values except the header
            $("#myTable tbody tr").each(function () {
                //debugger;
                var tds = $(this).find("td");
                var contactID = $(tds[0]).find('#hdnContactID').val();
                var all = $(tds[1]).find('#allComms').is(":checked");
                var inform = $(tds[1]).find('#informOnly').is(":checked");

                var contact = { contactId: contactID, isAll: all, isInform: inform };
                contacts.push(contact);
            });

            //alert(JSON.stringify(contacts));
            $('#hdContactsArray').val(JSON.stringify(contacts));
        });
    });
</script>