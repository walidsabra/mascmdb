@model CMDB01.Models.account

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "accounts", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "myform", role = "form" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>account</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UltimateId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UltimateId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UltimateId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ContractType, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ContractType", new SelectList(ViewBag.AccountContractType, "Text", "Text"), Model.ContractType, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ContractType, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("Status", new SelectList(ViewBag.AccountStatus, "Text", "Text"), Model.Status, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RequestIMS, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("RequestIMS", new SelectList(ViewBag.IMS, "Text", "Text"), Model.RequestIMS, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.RequestIMS, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Opportunity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Opportunity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Opportunity, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Billable, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Billable, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Billable, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProjectorProject, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProjectorProject, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProjectorProject, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            @Html.Label("Account Servers", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">

                <div class="col-md-10">
                    <form class="form-inline">
                        @Html.DropDownList("contactId", (List<SelectListItem>)ViewBag.servers, htmlAttributes: new { @class = "btn btn-success" })
                        <a class="btn btn-success" onclick="AddRecord()">+</a>
                    </form> <br />
                    <div>
                        <p class="card-text" >

                            @foreach (var srv in Model.servers)
                            {
                                <a class="glyphicon glyphicon-info-sign" href="/servers/details/@srv.Id"></a><a class="glyphicon glyphicon-remove" style="color:red" href="/servers/details/@srv.Id"></a> <b>@srv.Name</b> <br />
                            }
                            <br />
                        </p>
                    </div>
                </div>
            </div>
        </div>*@


    <div class="form-group">
        @Html.Label("Account Contacts", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-5">

            <div class="col-md-10">
                <form class="form-inline">
                    @Html.DropDownList("contactId", (List<SelectListItem>)ViewBag.contacts, htmlAttributes: new { @class = "form-inline" })
                    <a class="" onclick="AddRecord()"><span class="glyphicon glyphicon-insert">+</span></a>
                </form>
            </div>
            <table id="myTable" class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Contact Name</th>
                        <th>Category</th>
                        <th style="width:8px"></th>
                    </tr>
                </thead>
                <tbody id="cntRows">
                    @if (Model.AccountContacts.Count > 0)
                    {
                        foreach (var cn in Model.AccountContacts)
                        {
                            <tr>
                                <td><a title="Email" href="mailto:@cn.contact.email"> <i class="glyphicon glyphicon-envelope"></i></a> @cn.contact.Name</td>
                                <td>
                                    @if (@cn.entityCategory != null)
                                    {<a style="text-decoration:none">@cn.entityCategory</a>}
                                </td>
                                <td>
                                    <a style="color:red" rel="tooltip" title="Delete" href="@Url.Action("DeleteAccountContact", "accounts", new { accId = Model.Id,  contactId = cn.contact.Id })"><i class="glyphicon glyphicon-remove"></i></a>
                                </td>
                            </tr>

                        }
                    }
                </tbody>
            </table>



            <input type="hidden" name="hdContactsArray" id="hdContactsArray" />
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>

    function AddRecord() {
        var selectedContactId = $('#contactId').val();
        var selectedContactName = $("#contactId option:selected").text();
        var radioNam = "radio" + selectedContactId;

        var ddl = "<select id='ddl'>";
        var list = @Html.Raw(Json.Encode(ViewBag.AccountEntityTypes));
        for (var i = 0; i < list.length; i++) {
            ddl = ddl + " <option value=\"" + list[i].Text + "\">" + list[i].Text + "</option>";
        }
        ddl = ddl + "</select>";


        $('#cntRows').append('<tr>' +
            "<td><label id='lblContactName'>" + selectedContactName + "</label><input type='hidden' id='hdnContactID' value=" + selectedContactId + "></td>" +
            "<td>" + ddl + "</td><td><a style='color:red' class='tblRmv' href='javascript:void(0)'><i class='glyphicon glyphicon-remove tblRmv'></i></a></td></tr>");

        //"<td><input type=\"radio\" name=\"" + radioNam + "\" id='allComms'>All Comms &nbsp;</input><input type=\"radio\" name=\"" + radioNam + "\"id='informOnly'>Inform Only</input></td><td></td></tr>");
    }

    $(document).ready(function () {
        $('#myform').submit(function () {
            var contacts = new Array();

            //get all of the values except the header
            $("#myTable tbody tr").each(function () {
                //debugger;
                var tds = $(this).find("td");
                var contactID = $(tds[0]).find('#hdnContactID').val();
                var all = $(tds[1]).find('#allComms').is(":checked");
                var inform = $(tds[1]).find('#informOnly').is(":checked");
                var opt = $(tds[1]).find('#ddl option:selected').text();

                //alert(opt);

                var contact = { contactId: contactID, isAll: all, isInform: inform, opt: opt };

                contacts.push(contact);
            });

            //alert(JSON.stringify(contacts));
            $('#hdContactsArray').val(JSON.stringify(contacts));
        });
    });

    $(document).on("click", ".tblRmv", function () {
        $(this).closest('tr').remove();
    });

</script>