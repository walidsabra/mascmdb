@model CMDB01.Models.datasource

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "datasources", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "myform", role = "form" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>datasource</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GUID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GUID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GUID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Monitored, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Monitored, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Monitored, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Status", new SelectList(ViewBag.DSStatusList, "Text", "Text"), Model.Status, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Datasource Contacts", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">

                <div class="">
                    <form class="form-inline">
                        @Html.DropDownList("contactId", (List<SelectListItem>)ViewBag.contacts, htmlAttributes: new { @class = "form-inline" })
                        <a class="" onclick="AddRecord()"><span class="glyphicon glyphicon-insert">+</span></a>
                    </form>

                </div>
                <table id="myTable" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Contact Name</th>
                            <th>Category</th>
                            <th style="width:8px"></th>
                        </tr>
                    </thead>
                    <tbody id="cntRows">
                        @if (Model.DatasourceContacts.Count > 0)
            {
                foreach (var cn in Model.DatasourceContacts)
                {
                    <tr>
                        <td><a title="Email" href="mailto:@cn.contact.email"> <i class="glyphicon glyphicon-envelope"></i></a> @cn.contact.Name</td>
                        <td>
                            @if (@cn.entityCategory != null)
                {<a style="text-decoration:none">@cn.entityCategory</a>}
                        </td>
                        <td>
                            <a style="color:red" rel="tooltip" title="Delete" href="@Url.Action("DeleteDatasourceContact", "datasources", new { dsId = Model.Id,  contactId = cn.contact.Id })"><i class="glyphicon glyphicon-remove"></i></a>
                        </td>
                    </tr>

    }
}
                    </tbody>
                </table>



                <input type="hidden" name="hdContactsArray" id="hdContactsArray" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


<script>

    function AddRecord() {
        var selectedContactId = $('#contactId').val();
        var selectedContactName = $("#contactId option:selected").text();
        var radioNam = "radio" + selectedContactId;

        var ddl = "<select id='ddl'>";
        var list = @Html.Raw(Json.Encode(ViewBag.DatasourceEntityTypes));
        for (var i = 0; i < list.length; i++) {
            ddl = ddl + " <option value=\"" + list[i].Text + "\">" + list[i].Text + "</option>";
        }
        ddl = ddl + "</select>";


        $('#cntRows').append('<tr>' +
            "<td><label id='lblContactName'>" + selectedContactName + "</label><input type='hidden' id='hdnContactID' value=" + selectedContactId + "></td>" +
            "<td>" + ddl + "</td><td><a style='color:red' class='tblRmv' href='javascript:void(0)'><i class='glyphicon glyphicon-remove tblRmv'></i></a></td></tr>");

        //"<td><input type=\"radio\" name=\"" + radioNam + "\" id='allComms'>All Comms &nbsp;</input><input type=\"radio\" name=\"" + radioNam + "\"id='informOnly'>Inform Only</input></td><td></td></tr>");
    }

    $(document).ready(function () {
        $('#myform').submit(function () {
            var contacts = new Array();

            //get all of the values except the header
            $("#myTable tbody tr").each(function () {
                //debugger;
                var tds = $(this).find("td");
                var contactID = $(tds[0]).find('#hdnContactID').val();
                var all = $(tds[1]).find('#allComms').is(":checked");
                var inform = $(tds[1]).find('#informOnly').is(":checked");
                var opt = $(tds[1]).find('#ddl option:selected').text();

                //alert(opt);

                var contact = { contactId: contactID, opt: opt };

                contacts.push(contact);
            });

            //alert(JSON.stringify(contacts));
            $('#hdContactsArray').val(JSON.stringify(contacts));
        });
    });


    $(document).on("click", ".tblRmv", function () {
        $(this).closest('tr').remove();
    });
</script>