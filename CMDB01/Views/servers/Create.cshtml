@model CMDB01.Models.serverFarms

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";


}
   
<script src="~/Scripts/jquery-1.12.4.js"></script>
<script src="~/Scripts/jquery-1.12.4.min.js"></script>

<h2>Create</h2>

    <div class="row">
        
        
@using (Html.BeginForm("Create", "servers", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "myform", role = "form" }))
{
                @Html.AntiForgeryToken()


                <div class="form-horizontal">
                    <h4>server</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group">
                        @Html.Label("Account", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("accountId", new SelectList(ViewBag.accounts, "Value", "Text"), htmlAttributes: new { @class = "form-control" })

                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.DataCenter, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DataCenter, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DataCenter, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.DeployedVersion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DeployedVersion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DeployedVersion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.FQDN, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FQDN, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FQDN, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Offering, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Offering, new SelectList(ViewBag.Offering, "Text", "Text"), "<<< Select >>>", new { @class = "form-control" })
                            @*@Html.EditorFor(model => model.Offering, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.Offering, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Purpose, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Purpose, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Purpose, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Role, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.Label("Server Contacts", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("contactId", (List<SelectListItem>)ViewBag.contacts, htmlAttributes: new { @class = "form-control", @onchange = "AddRecord()" })
                            <table id="myTable" class="table-bordered table-striped">
                                <thead>
                                    <tr>
                                        <th>Contact Name</th>
                                        <th>Category</th>
                                    </tr>
                                </thead>
                                <tbody id="cntRows"></tbody>

                            </table>
                        </div>
                        <input type="hidden" name="hdContactsArray" id="hdContactsArray" />
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            }
                </div>

      

        
            
                
                
            
        
    <div class="row">
        @Html.ActionLink("Back to List", "Index")
    </div>






@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


}

<script>

    function AddRecord()
    {
        var selectedContactId = $('#contactId').val();
        var selectedContactName = $("#contactId option:selected").text();
        var radioNam = "radio" + selectedContactId;

                        var ddl = "<select id='ddl'>";
        var list = @Html.Raw(Json.Encode(ViewBag.ServerFarmEntityTypes));
        for (var i = 0; i < list.length; i++) {
            ddl = ddl + " <option value=\"" + list[i].Text + "\">" + list[i].Text + "</option>";
        }
        ddl = ddl + "</select>";

        $('#cntRows').append('<tr>' +
            "<td><label id='lblContactName'>" + selectedContactName + "</label><input type='hidden' id='hdnContactID' value=" + selectedContactId + "></td>" +
            "<td>" + ddl + "</td></tr>");
            //"<td><input type=\"checkbox\" name=\"" + radioNam + "\" id='outage'>Outage &nbsp;</input><input type=\"checkbox\" name=\"" + radioNam + "\"id='change'>Change</input></td></tr>");


    }

    $(document).ready(function () {

        $('#myform').submit(function () {
            var contacts = new Array();

            //get all of the values except the header
            $("#myTable tbody tr").each(function () {
                var tds = $(this).find("td");
                var contactID = $(tds[0]).find('#hdnContactID').val();
                var outage = $(tds[1]).find('#outage').is(":checked");
                var change = $(tds[1]).find('#change').is(":checked");
                var opt = $(tds[1]).find('#ddl option:selected').text();

                var contact = { contactId: contactID, isOutage: outage, isChange: change, opt: opt };
                contacts.push(contact);
            });

            //alert(JSON.stringify(contacts));
            $('#hdContactsArray').val(JSON.stringify(contacts));
        });
    });
</script>