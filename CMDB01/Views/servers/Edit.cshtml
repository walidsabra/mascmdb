@model CMDB01.Models.serverFarms

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "servers", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "myform", role = "form" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>server</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataCenter, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DataCenter, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DataCenter, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeployedVersion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeployedVersion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeployedVersion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Status", new SelectList(ViewBag.ServerFarmStatus, "Text", "Text"), Model.Status, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
        @*SLA*@
        <div class="form-group">
            @Html.LabelFor(model => model.SLA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SLA", new SelectList(ViewBag.SLA, "Text", "Text"), Model.SLA, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SLA, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CustomSLA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustomSLA, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @Id = "TxtCustomSLA" } })
                @Html.ValidationMessageFor(model => model.CustomSLA, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FQDN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FQDN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FQDN, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DeploymentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DeploymentId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DeploymentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Role, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Offering, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownList("Role", new SelectList(ViewBag.Role, "Text", "Text"), Model.Role, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Architecture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Architecture, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Architecture, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Server Contacts", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">

                <div class="col-md-10">
                    <form class="form-inline">
                        @Html.DropDownList("contactId", (List<SelectListItem>)ViewBag.contacts, htmlAttributes: new { @class = "btn btn-success" })
                        <a class="btn btn-success" onclick="AddRecord()">+</a>
                    </form>
                </div>
                <table id="myTable" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Contact Name</th>
                            <th>Category</th>
                            <th style="width:8px"></th>
                        </tr>
                    </thead>
                    <tbody id="cntRows">
                        @if (Model.ServerContacts.Count > 0)
                        {
                            foreach (var cn in Model.ServerContacts)
                            {
                                <tr>
                                    <td><a title="Email" href="mailto:@cn.contact.email"> <i class="glyphicon glyphicon-envelope"></i></a> @cn.contact.Name</td>
                                    <td>
                                        @if (@cn.entityCategory != null)
                                        { <a style="text-decoration:none">@cn.entityCategory</a> }

                                        @*@if (@cn.entityCategory == "Outage")
                                        { <a style="text-decoration:none">Outage</a> }
                                        @if (@cn.entityCategory == "Change")
                                        { <a style="text-decoration:none">Change</a> }*@
                                    </td>
                                    <td>
                                        <a style="color:red" rel="tooltip" title="Delete" href="@Url.Action("DeleteServerFarmContact", "servers", new { srvId = Model.Id,  contactId = cn.contact.Id })"><i class="glyphicon glyphicon-remove"></i></a>
                                    </td>
                                </tr>

                            }
                        }
                    </tbody>
                </table>



                <input type="hidden" name="hdContactsArray" id="hdContactsArray" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script>

    function AddRecord() {
        var selectedContactId = $('#contactId').val();
        var selectedContactName = $("#contactId option:selected").text();
        var radioNam = "radio" + selectedContactId;

                var ddl = "<select id='ddl'>";
        var list = @Html.Raw(Json.Encode(ViewBag.ServerFarmEntityTypes));
        for (var i = 0; i < list.length; i++) {
            ddl = ddl + " <option value=\"" + list[i].Text + "\">" + list[i].Text + "</option>";
        }
        ddl = ddl + "</select>";


        $('#cntRows').append('<tr>' +
            "<td><label id='lblContactName'>" + selectedContactName + "</label><input type='hidden' id='hdnContactID' value=" + selectedContactId + "></td>" +
            "<td>" + ddl + "</td><td></td></tr>");
            // "<td><input type=\"checkbox\" name=\"" + radioNam + "\" id='outage'>Outage &nbsp;</input><input type=\"checkbox\" name=\"" + radioNam + "\"id='change'>Change</input></td><td></td></tr>");


    }

    $(document).ready(function () {

        $('#myform').submit(function () {
            var contacts = new Array();

            //get all of the values except the header
            $("#myTable tbody tr").each(function () {
                var tds = $(this).find("td");
                var contactID = $(tds[0]).find('#hdnContactID').val();
                var outage = $(tds[1]).find('#outage').is(":checked");
                var change = $(tds[1]).find('#change').is(":checked");
                var opt = $(tds[1]).find('#ddl option:selected').text();


                var contact = { contactId: contactID, isOutage: outage, isChange: change, opt: opt  };
                contacts.push(contact);
            });

            //alert(JSON.stringify(contacts));
            $('#hdContactsArray').val(JSON.stringify(contacts));
        });
    });

    $("#SLA").change(function () {
        if ($("#SLA option:selected").text() == "Standard") {
            $('#TxtCustomSLA').attr("readonly", "readonly");
        };
        if ($("#SLA option:selected").text() == "Custom") {
            $('#TxtCustomSLA').removeAttr("readonly");
        };
    });
</script>